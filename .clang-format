---
BasedOnStyle: Google
CommentPragmas: '(@copydoc)'

# Pointers
DerivePointerAlignment: false
PointerAlignment: Left

# Indents
IndentWidth: 4
ContinuationIndentWidth: 4
TabWidth: 4
UseCRLF: false
UseTab: Never
MaxEmptyLinesToKeep: 3
IndentCaseLabels: true
IndentCaseBlocks: true
IndentGotoLabels: true
IndentPPDirectives: None
IndentExternBlock: AfterExternBlock
IndentWrappedFunctionNames: true
NamespaceIndentation: All

AlignConsecutiveAssignments:
  # The column at which the = starts is constant among a block of definitions.
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: true
  AlignCompound: true
  PadOperators: true
AlignConsecutiveBitFields:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: true
AlignConsecutiveDeclarations:
  # The column at which the name starts is constant among a block of declarations / definitions.
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: true
AlignConsecutiveMacros:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: true

# Line breaks
AlwaysBreakTemplateDeclarations: No
AllowShortFunctionsOnASingleLine: None
AllowShortEnumsOnASingleLine: false
KeepEmptyLinesAtTheStartOfBlocks: true
BreakBeforeBraces: Custom
ColumnLimit: 120

# Includes
IncludeBlocks: Merge

# configure braces and parens:
BraceWrapping:
  AfterClass: false
  AfterNamespace: false
  AfterEnum: false # The { is on the same line as the struct, union or enum keyword.
  AfterStruct: false # The { is on the same line as the struct, union or enum keyword.
  AfterUnion: false # The { is on the same line as the struct, union or enum keyword.
  AfterFunction: false # The { is on the same line as the ).
  BeforeCatch: false
  AfterCaseLabel: false
  AfterControlStatement: Never

  AfterExternBlock: false
  BeforeElse: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true

AllowShortBlocksOnASingleLine: Never # never make single-line blocks
AllowShortIfStatementsOnASingleLine: Never # never make single-line ifs
AllowShortLoopsOnASingleLine: true # allow single-line loops

# configure general code:

# The = has at least one space to the left and one space to the right.
SpaceBeforeAssignmentOperators: true

# configure pointers:
QualifierAlignment: Left # The const is to the left of the type (unless the pointer is also a constant).
SpaceAroundPointerQualifiers: After

# include sorting:

SortIncludes: CaseInsensitive
IncludeCategories:
  # External headers
  - Regex: '^\<('
    Priority: 3
    SortPriority: 0
    CaseSensitive: false

  # System headers
  - Regex: '^\<(std.*|inttypes)'
    Priority: 2
    SortPriority: 0
    CaseSensitive: false

  # Assume project header
  - Regex: '^\".*'
    Priority: 1
    SortPriority: 0
    CaseSensitive: false

# all other options

# all arguments on one or on a separate line, use closing parens on separate line
BinPackArguments: false
BinPackParameters: false
AlignAfterOpenBracket: BlockIndent
AllowAllArgumentsOnNextLine: false

BitFieldColonSpacing: Both # int bf : 2;

AlignEscapedNewlines: Right

AllowShortCaseLabelsOnASingleLine: true # don't split up "case x: return value;"

BreakBeforeTernaryOperators: true

# Configure some special macros:
AttributeMacros:
  - NORETURN
  - PURE
  - COLD
  - HOT
  - FORCEINLINE
  - SECTION
WhitespaceSensitiveMacros:
  - comptime_stringify
# ForEachMacros:
#   - foreach
#   - Q_FOREACH
#   - BOOST_FOREACH
# IfMacros:
#   - KJ_IF_MAYBE
# StatementMacros:
#   - Q_UNUSED
#   - QT_REQUIRE_VERSION
# StatementAttributeLikeMacros:
#   - FALLTHROUGH
# MacroBlockBegin: ''
# MacroBlockEnd: ''
---
